package com.lq.springdemo.service;

import com.lq.springdemo.entity.Actor;
import com.lq.springdemo.entity.ActorExample;
import com.lq.springdemo.entity.common.BasePageResult;
import com.lq.springdemo.interfacedec.ComPage;
import com.lq.springdemo.mapperInterface.ActorMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public class ActorService {

    @Autowired
    private  ActorMapper actorMapper;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public long countByExample(Actor actor){
        ActorExample example = new ActorExample();
        return actorMapper.countByExample(example);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public long deleteByExample(Actor actor){
        ActorExample example = new ActorExample();
        return actorMapper.countByExample(example);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public int deleteByPrimaryKey(long actorId){
        return actorMapper.deleteByPrimaryKey(actorId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public int insert(Actor record){
        return  actorMapper.insert(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public int insertSelective(Actor record){
        return  actorMapper.insertSelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public List<Actor> selectByExample(Actor record){
        ActorExample example = new ActorExample();
        return  actorMapper.selectByExample(example);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public Actor selectByPrimaryKey(long actorId){
        return actorMapper.selectByPrimaryKey(actorId);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public int updateByExampleSelective(Actor record){
        ActorExample example = new ActorExample();
        return  actorMapper.updateByExampleSelective(record,example);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public int updateByExample(Actor record){
        ActorExample example = new ActorExample();
        return  actorMapper.updateByExampleSelective(record,example);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public int updateByPrimaryKeySelective(Actor record){
        return actorMapper.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table actor
     *
     * @mbg.generated Tue Aug 30 09:26:40 CST 2022
     */
    public int updateByPrimaryKey(Actor record){
        return actorMapper.updateByPrimaryKey(record);
    }

    @ComPage
    public BasePageResult<List<Actor>> getPageData(Actor record){
        BasePageResult basePageResult = new BasePageResult<List<Actor>>();
        ActorExample actorExample = new ActorExample();
        ActorExample.Criteria criteria = actorExample.createCriteria();
        criteria.andActorIdIsNotNull();
        List<Actor> actors = actorMapper.selectByExample(actorExample);
        basePageResult.setResult(actors);
        return basePageResult;
    }
}